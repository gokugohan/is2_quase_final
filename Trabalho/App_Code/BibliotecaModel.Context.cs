//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class BibliotecaEntity : DbContext
{
    public BibliotecaEntity()
        : base("name=BibliotecaEntity")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Autor> Autores { get; set; }
    public virtual DbSet<Categoria> Categorias { get; set; }
    public virtual DbSet<Editora> Editoras { get; set; }
    public virtual DbSet<Livro> Livros { get; set; }
    public virtual DbSet<Utilizador> Utilizadores { get; set; }
    public virtual DbSet<UtilizadorLivro> UtilizadoresLivros { get; set; }
    public virtual DbSet<View_Livro> View_Livro { get; set; }
    public virtual DbSet<view_utilizador_req_livro> view_utilizador_req_livro { get; set; }

    public virtual int ProcedureInserirAutor(string nome, string apelido, ObjectParameter current_ID_ADD_RET)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var apelidoParameter = apelido != null ?
            new ObjectParameter("Apelido", apelido) :
            new ObjectParameter("Apelido", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcedureInserirAutor", nomeParameter, apelidoParameter, current_ID_ADD_RET);
    }

    public virtual int ProcedureInserirCategoria(string nome, ObjectParameter current_ID_ADD_RET)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcedureInserirCategoria", nomeParameter, current_ID_ADD_RET);
    }

    public virtual int ProcedureInserirEditora(string nome, string descricao, ObjectParameter current_ID_ADD_RET)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var descricaoParameter = descricao != null ?
            new ObjectParameter("Descricao", descricao) :
            new ObjectParameter("Descricao", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcedureInserirEditora", nomeParameter, descricaoParameter, current_ID_ADD_RET);
    }

    public virtual int ProcedureInserirLivro(string iSBN, string titulo, Nullable<System.DateTime> dataPublicacao, Nullable<int> autor, Nullable<int> editora, Nullable<int> categoria, ObjectParameter current_ID_ADD_RET)
    {
        var iSBNParameter = iSBN != null ?
            new ObjectParameter("ISBN", iSBN) :
            new ObjectParameter("ISBN", typeof(string));

        var tituloParameter = titulo != null ?
            new ObjectParameter("Titulo", titulo) :
            new ObjectParameter("Titulo", typeof(string));

        var dataPublicacaoParameter = dataPublicacao.HasValue ?
            new ObjectParameter("DataPublicacao", dataPublicacao) :
            new ObjectParameter("DataPublicacao", typeof(System.DateTime));

        var autorParameter = autor.HasValue ?
            new ObjectParameter("Autor", autor) :
            new ObjectParameter("Autor", typeof(int));

        var editoraParameter = editora.HasValue ?
            new ObjectParameter("Editora", editora) :
            new ObjectParameter("Editora", typeof(int));

        var categoriaParameter = categoria.HasValue ?
            new ObjectParameter("Categoria", categoria) :
            new ObjectParameter("Categoria", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcedureInserirLivro", iSBNParameter, tituloParameter, dataPublicacaoParameter, autorParameter, editoraParameter, categoriaParameter, current_ID_ADD_RET);
    }

    public virtual int ProcedureInserirUtilizador(string nome, string apelido, string numeroContato, string email, string endereco, ObjectParameter current_ID_ADD_RET)
    {
        var nomeParameter = nome != null ?
            new ObjectParameter("Nome", nome) :
            new ObjectParameter("Nome", typeof(string));

        var apelidoParameter = apelido != null ?
            new ObjectParameter("Apelido", apelido) :
            new ObjectParameter("Apelido", typeof(string));

        var numeroContatoParameter = numeroContato != null ?
            new ObjectParameter("NumeroContato", numeroContato) :
            new ObjectParameter("NumeroContato", typeof(string));

        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));

        var enderecoParameter = endereco != null ?
            new ObjectParameter("Endereco", endereco) :
            new ObjectParameter("Endereco", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcedureInserirUtilizador", nomeParameter, apelidoParameter, numeroContatoParameter, emailParameter, enderecoParameter, current_ID_ADD_RET);
    }
}
